steps:

  - id: 'Build: docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', './typescript',
      '-f', 'typescript/packages/backend/Dockerfile.prod',
      '-t', 'gcr.io/$PROJECT_ID/backend/build:$COMMIT_SHA',
    ]

  - id: 'Push: docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/backend/build:$COMMIT_SHA']
    waitFor:
      - 'Build: docker image'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'beta', 'run', 'deploy', '$_CLOUD_RUN_SERVICE_NAME',
      '--image', 'gcr.io/$PROJECT_ID/backend/build:$COMMIT_SHA',
      '--region', 'asia-northeast1',
      '--platform', 'managed',
      # '--memory', '1Gi',
      '--set-cloudsql-instances', '${_CLOUD_SQL_CONNECTION_NAME}',
      '--allow-unauthenticated',
      '--set-env-vars', '
        NO_COLOR=true,
        TZ=Asia/Tokyo,
        DATABASE_URL=${_DATABASE_URL},
        FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID},
        FIREBASE_CLIENT_EMAIL=${_FIREBASE_CLIENT_EMAIL},
        FIREBASE_PRIVATE_KEY=${_FIREBASE_PRIVATE_KEY},
        GCP_PROJECT_ID=${_GCP_PROJECT_ID},
        GCP_CLIENT_EMAIL=${_GCP_CLIENT_EMAIL},
        GCP_PRIVATE_KEY=${_GCP_PRIVATE_KEY},
        CLOUD_STORAGE_PUBLIC_BUCKET=${_CLOUD_STORAGE_PUBLIC_BUCKET}'
    ]
    # waitFor:
    #   - 'Migrate: database'

images:
  - gcr.io/$PROJECT_ID/backend/build:$COMMIT_SHA

timeout: 1200s
